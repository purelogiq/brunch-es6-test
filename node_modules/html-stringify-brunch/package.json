{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/purelogiq/html-stringify-brunch/master/package.json",
          "gitUrl": "git://github.com/purelogiq/html-stringify-brunch.git",
          "httpsUrl": "git+https://github.com/purelogiq/html-stringify-brunch.git",
          "shortcut": "github:purelogiq/html-stringify-brunch",
          "ssh": "git@github.com:purelogiq/html-stringify-brunch.git",
          "sshUrl": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
          "type": "github"
        },
        "name": "html-stringify-brunch",
        "raw": "html-stringify-brunch@git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
        "rawSpec": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
        "scope": null,
        "spec": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
        "type": "hosted"
      },
      "/home/imadueme/work/github/brunch-es6"
    ]
  ],
  "_from": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
  "_id": "html-stringify-brunch@1.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/html-stringify-brunch",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/purelogiq/html-stringify-brunch/master/package.json",
      "gitUrl": "git://github.com/purelogiq/html-stringify-brunch.git",
      "httpsUrl": "git+https://github.com/purelogiq/html-stringify-brunch.git",
      "shortcut": "github:purelogiq/html-stringify-brunch",
      "ssh": "git@github.com:purelogiq/html-stringify-brunch.git",
      "sshUrl": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
      "type": "github"
    },
    "name": "html-stringify-brunch",
    "raw": "html-stringify-brunch@git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
    "rawSpec": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+ssh://git@github.com/purelogiq/html-stringify-brunch.git#50f5b83fd11cc29729994bd7b1e5b165b766286b",
  "_shasum": "785f87d0a4499cdb2138d410e83ea68fca734b0a",
  "_shrinkwrap": null,
  "_spec": "html-stringify-brunch@git+ssh://git@github.com/purelogiq/html-stringify-brunch.git",
  "_where": "/home/imadueme/work/github/brunch-es6",
  "author": {
    "name": "Danny Frencham"
  },
  "bugs": {
    "url": "https://github.com/dfrencham/html-stringify-brunch/issues"
  },
  "dependencies": {
    "coffee-script": "^1.9.1"
  },
  "description": "Brunch template module. Outputs a single file containing stringified HTML, This can be used in conjunction with amd module loading and text.js",
  "devDependencies": {
    "chai": "^3.2.0",
    "mocha": "^2.2.5"
  },
  "gitHead": "50f5b83fd11cc29729994bd7b1e5b165b766286b",
  "homepage": "https://github.com/dfrencham/html-stringify-brunch",
  "keywords": [
    "brunch",
    "html",
    "template",
    "amd"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "name": "html-stringify-brunch",
  "optionalDependencies": {},
  "readme": "# html-stringify-brunch\nAdds stringify pass-through support to brunch (really useful if you use AMD modules, and you want to load them via text.js).\n\nThis means you can have your HTML templates pass through the Brunch pipeline - allowing them to be wrapped in AMD define statements, and combined into a single file.\n\n## Install\nInstall the plugin via npm with `npm install --save html-stringify-brunch`.\n\nOr, do manual install by adding `\"html-stringify-brunch\": \"x.y.z\"` to `package.json` of your brunch app.\n\n## Usage\n\n### Example - using templated views with AMD module loader\n\nThis example assumes your app is laid out as follows:\n\n```\napp\\\n  assets\\\n    index.html\n  components\\\n    example-component\\\n      view.html\n      viewmodel.js\n    example-component-2\\\n      view.html\n      viewmodel.js\n  styles\\\n    main.css\n  application.js\n```\nNote that there is a **components** folder, containing multiple components. The goal is to have the component html files combined, and wrapped with AMD define statements in a way that **text.js** can consume.\n\nWhen configuring your brunch build, do the following:\n\n1. In your module definition is set to **'amd'**.\n2. In the **files** section, add an entry for **templates** with a joinTo pointed at your component folder.\n3. In the **modules** section, set **wrapper** to a custom function (as shown). Note that in the case of an item existing in our component folder, we use **text!** in our define statement - allowing text.js to load the module.\n\n```coffeescript\nmodule.exports = config:\n  files:\n    javascripts:\n      joinTo:\n      \t'app.js': /^app/\n      \t'vendor.js': /^(vendor)[\\\\/]/\n    stylesheets: joinTo: 'app.css'\n    templates:\n        precompile: true\n        joinTo: 'templates.js': /^app\\/components/\n  modules:\n    wrapper: (path, data) ->\n      if path.indexOf('app\\/components) == 0')\n          staticPath = path.replace /^app\\/components/, 'text!components'\n          \"\"\"\n  require.define({#{staticPath}: function(exports, require, module) {\n    #{data}\n  }});\\n\\n\n          \"\"\"\n      else\n          \"\"\"\n  require.define({#{path}: function(exports, require, module) {\n    #{data}\n  }});\\n\\n\n          \"\"\"\n    definition: 'amd'\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dfrencham/html-stringify-brunch.git"
  },
  "scripts": {
    "postinstall": "node setup.js postinstall",
    "prepublish": "coffee -o lib/ src/",
    "test": "node setup.js test"
  },
  "version": "1.0.1"
}
